<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Min&#39;s Blog</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2016-04-26T11:32:44.000Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Min</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>注册服务</title>
    <link href="http://yoursite.com/2016/04/26/Consul-Getting-Started-03-Services/"/>
    <id>http://yoursite.com/2016/04/26/Consul-Getting-Started-03-Services/</id>
    <published>2016-04-26T07:18:50.000Z</published>
    <updated>2016-04-26T11:32:44.000Z</updated>
    
    <content type="html">&lt;p&gt;在前面的步骤，我们运行了第一个代理，看到了集群的成员，并且查询了节点信息。在这篇指南里，我们将注册我们第一个服务并且查询这个服务。&lt;/p&gt;
&lt;h2 id=&quot;定义一个服务&quot;&gt;&lt;a href=&quot;#定义一个服务&quot; class=&quot;headerlink&quot; title=&quot;定义一个服务&quot;&gt;&lt;/a&gt;定义一个服务&lt;/h2&gt;&lt;p&gt;一个服务能够通过提供一个&lt;a href=&quot;https://www.consul.io/docs/agent/services.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;服务定义&lt;/a&gt;或者调用适当的&lt;a href=&quot;https://www.consul.io/docs/agent/http.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;HTTP API&lt;/a&gt;来注册。&lt;/p&gt;
&lt;p&gt;服务定义是最通用的注册服务方法，那么我们将使用这种方法来注册服务。我们将建构一个代理配置，前面的步骤已经描述过。&lt;/p&gt;
&lt;p&gt;首先，为Consul配置创建一个目录。Consul装载配置目录中所有的配置文件，通常在Unix系统中惯例是建立以名为 &lt;em&gt;/etc/consul.d&lt;/em&gt; 的目录（ &lt;em&gt;.d&lt;/em&gt; 后缀暗示这个目录包含了一些配置文件的集合）。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ sudo mkdir /etc/consul.d&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;下一步，我们将创建一个服务定义配置文件。我们假设我们有一个名为“web”服务，它运行在80端口。另外我们为它设置一个标记，那么我们就可以通过它来查询到这个服务：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ &lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;&amp;#123;&quot;service&quot;: &amp;#123;&quot;name&quot;: &quot;web&quot;, &quot;tags&quot;: [&quot;rails&quot;], &quot;port&quot;: 80&amp;#125;&amp;#125;&#39;&lt;/span&gt; \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;gt;/etc/consul.d/web.json&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;现在，我们重启代理，并提供配置目录参数：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ consul agent -dev -config-dir /etc/consul.d&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;==&amp;gt; Starting Consul agent...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [INFO] agent: Synced service &lt;span class=&quot;string&quot;&gt;&#39;web&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;你会注意到在输出中”synced service ‘web’”。这意味着代理已经从配置文件中装载了该服务定义，并且已经成功注册该服务到服务目录中。&lt;/p&gt;
&lt;p&gt;如果你想注册多个服务，你可以在Consul配置目录中创建多个服务定义文件。&lt;/p&gt;
&lt;h2 id=&quot;查询服务&quot;&gt;&lt;a href=&quot;#查询服务&quot; class=&quot;headerlink&quot; title=&quot;查询服务&quot;&gt;&lt;/a&gt;查询服务&lt;/h2&gt;&lt;p&gt;一旦代理启动并且服务已经同步，我们就可以使用DNS或者HTTP API来查询服务了。&lt;/p&gt;
&lt;h3 id=&quot;DNS-API&quot;&gt;&lt;a href=&quot;#DNS-API&quot; class=&quot;headerlink&quot; title=&quot;DNS API&quot;&gt;&lt;/a&gt;DNS API&lt;/h3&gt;&lt;p&gt;让我们首先使用DNS API查询我们的服务。对于DNS API，服务的DNS名称是 &lt;em&gt;NAME.service.consul&lt;/em&gt; 。默认所有的DNS名称都是在 &lt;em&gt;consul&lt;/em&gt; 名称空间下，当然这个是&lt;a href=&quot;https://www.consul.io/docs/agent/options.html#domain&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;可配置的&lt;/a&gt;。&lt;em&gt;service&lt;/em&gt; 子域名告诉Consul我们正在查询服务，并且 &lt;em&gt;NAME&lt;/em&gt; 就是要查询的服务的名称。&lt;/p&gt;
&lt;p&gt;对于我们注册的web服务，对应的查询设置就是 &lt;em&gt;web.service.consul&lt;/em&gt; ：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ dig @127.0.0.1 -p 8600 web.service.consul&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;;; QUESTION SECTION:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;;web.service.consul.        IN  A&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;;; ANSWER SECTION:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;web.service.consul. 0   IN  A   172.20.20.11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;你可以看到，一个带了节点的IP地址的 &lt;em&gt;A&lt;/em&gt; 记录被返回了，它就是可用的服务。 &lt;em&gt;A&lt;/em&gt; 记录只能包含IP地址。&lt;/p&gt;
&lt;p&gt;你也可以使用DNS API来获取完整的地址/端口的 &lt;em&gt;SRV&lt;/em&gt; 记录：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ dig @127.0.0.1 -p 8600 web.service.consul SRV&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;;; QUESTION SECTION:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;;web.service.consul.        IN  SRV&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;;; ANSWER SECTION:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;web.service.consul. 0   IN  SRV 1 1 80 Armons-MacBook-Air.node.dc1.consul.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;;; ADDITIONAL SECTION:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Armons-MacBook-Air.node.dc1.consul. 0 IN A  172.20.20.11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;SRV&lt;/em&gt; 记录显示了web服务证运行在节点 &lt;em&gt;Armons-MacBook-Air.node.dc1.consul.&lt;/em&gt; 的80端口上。额外的部分和 &lt;em&gt;A&lt;/em&gt; 记录返回的内容一样。&lt;/p&gt;
&lt;p&gt;最后，我们可以使用DNS API基于标记来过滤服务，基于标记的服务查询的格式是 &lt;em&gt;TAG.NAME.service.consul&lt;/em&gt; 。 在下面的例子里，我们请求Consul查询所有含”rails”标记的web服务。我们得到了我们注册的带有该标记的服务的响应：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ dig @127.0.0.1 -p 8600 rails.web.service.consul&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;;; QUESTION SECTION:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;;rails.web.service.consul.      IN  A&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;;; ANSWER SECTION:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;rails.web.service.consul.   0   IN  A   172.20.20.11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;HTTP-API&quot;&gt;&lt;a href=&quot;#HTTP-API&quot; class=&quot;headerlink&quot; title=&quot;HTTP API&quot;&gt;&lt;/a&gt;HTTP API&lt;/h3&gt;&lt;p&gt;除了DNS API，HTTP API也可以用于服务查询：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ curl http://localhost:8500/v1/catalog/service/web&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[&amp;#123;&lt;span class=&quot;string&quot;&gt;&quot;Node&quot;&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;&quot;Armons-MacBook-Air&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;Address&quot;&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;&quot;172.20.20.11&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;ServiceID&quot;&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;&quot;web&quot;&lt;/span&gt;, \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;ServiceName&quot;&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;&quot;web&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;ServiceTags&quot;&lt;/span&gt;:[&lt;span class=&quot;string&quot;&gt;&quot;rails&quot;&lt;/span&gt;],&lt;span class=&quot;string&quot;&gt;&quot;ServicePort&quot;&lt;/span&gt;:80&amp;#125;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;该目录API返回了指定节点以及指定的服务信息。就像我们马上要看到了&lt;a href=&quot;https://www.consul.io/intro/getting-started/checks.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;健康检测&lt;/a&gt;，通常我们的查询只是查询那些健康的实例，这些实例都是通过了健康检测的。这也是DNS在底层做的事情。下面的查询只查询健康的实例：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ curl &lt;span class=&quot;string&quot;&gt;&#39;http://localhost:8500/v1/health/service/web?passing&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[&amp;#123;&lt;span class=&quot;string&quot;&gt;&quot;Node&quot;&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;&quot;Armons-MacBook-Air&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;Address&quot;&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;&quot;172.20.20.11&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;Service&quot;&lt;/span&gt;:&amp;#123; \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;ID&quot;&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;&quot;web&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;Service&quot;&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;&quot;web&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;Tags&quot;&lt;/span&gt;:[&lt;span class=&quot;string&quot;&gt;&quot;rails&quot;&lt;/span&gt;],&lt;span class=&quot;string&quot;&gt;&quot;Port&quot;&lt;/span&gt;:80&amp;#125;, &lt;span class=&quot;string&quot;&gt;&quot;Checks&quot;&lt;/span&gt;: ...&amp;#125;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;更新服务&quot;&gt;&lt;a href=&quot;#更新服务&quot; class=&quot;headerlink&quot; title=&quot;更新服务&quot;&gt;&lt;/a&gt;更新服务&lt;/h2&gt;&lt;p&gt;当配置文件修改后服务定义可以被更新，需要发送 &lt;em&gt;SIGHUP&lt;/em&gt; 信号给代理。这可以让代理更新服务而无需停止代理或者让服务查询时服务不可用。&lt;/p&gt;
&lt;p&gt;可以选择HTTP API来动态地增加，删除，以及更改服务。&lt;/p&gt;
&lt;h2 id=&quot;下一步&quot;&gt;&lt;a href=&quot;#下一步&quot; class=&quot;headerlink&quot; title=&quot;下一步&quot;&gt;&lt;/a&gt;下一步&lt;/h2&gt;&lt;p&gt;我们现在配置了一个单代理，并且注册了一个服务。进展非常不错，但是下一步我们会展示Consul里最有价值的特性，&lt;a href=&quot;&quot;&gt;设置我们第一个集群&lt;/a&gt;!&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;在前面的步骤，我们运行了第一个代理，看到了集群的成员，并且查询了节点信息。在这篇指南里，我们将注册我们第一个服务并且查询这个服务。&lt;/p&gt;
&lt;h2 id=&quot;定义一个服务&quot;&gt;&lt;a href=&quot;#定义一个服务&quot; class=&quot;headerlink&quot; title=&quot;定义一个服务&quot;&gt;&lt;/a&gt;定义一个服务&lt;/h2&gt;&lt;p&gt;一个服务能够通过提供一个&lt;a href=&quot;https://www.consul.io/docs/agent/services.html&quot;&gt;服务定义&lt;/a&gt;或者调用适当的&lt;a href=&quot;https://www.consul.io/docs/agent/http.html&quot;&gt;HTTP API&lt;/a&gt;来注册。&lt;/p&gt;
&lt;p&gt;服务定义是最通用的注册服务方法，那么我们将使用这种方法来注册服务。我们将建构一个代理配置，前面的步骤已经描述过。&lt;/p&gt;
&lt;p&gt;首先，为Consul配置创建一个目录。Consul装载配置目录中所有的配置文件，通常在Unix系统中惯例是建立以名为 &lt;em&gt;/etc/consul.d&lt;/em&gt; 的目录（ &lt;em&gt;.d&lt;/em&gt; 后缀暗示这个目录包含了一些配置文件的集合）。&lt;/p&gt;
    
    </summary>
    
      <category term="Development" scheme="http://yoursite.com/categories/Development/"/>
    
    
      <category term="Consul" scheme="http://yoursite.com/tags/Consul/"/>
    
      <category term="MicroService" scheme="http://yoursite.com/tags/MicroService/"/>
    
  </entry>
  
  <entry>
    <title>运行Consul代理</title>
    <link href="http://yoursite.com/2016/04/25/Consul-Getting-Started-02-Run-The-Consul-Agent/"/>
    <id>http://yoursite.com/2016/04/25/Consul-Getting-Started-02-Run-The-Consul-Agent/</id>
    <published>2016-04-25T07:18:50.000Z</published>
    <updated>2016-04-26T11:32:30.000Z</updated>
    
    <content type="html">&lt;p&gt;在Consul安装完成后，必须先运行代理。该代理可以以服务器或者客户端模式运行。每个数据中心必须博阿含至少一个服务器，不过一个集群推荐3或5个服务器。一个单服务器的部署在失败的情况下会发生数据丢失因此不推荐使用。&lt;/p&gt;
&lt;p&gt;所有其他的代理运行在客户端模式。一个客户端是一个非常轻量级的进程，它注册服务，运行健康检查，以及转发查询到服务器。代理必须运行在集群中的每个节点上。&lt;/p&gt;
&lt;p&gt;更多的关于启动一个数据中心的细节，请查看&lt;a href=&quot;https://www.consul.io/docs/guides/bootstrapping.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这篇指导&lt;/a&gt;。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;启动代理&quot;&gt;&lt;a href=&quot;#启动代理&quot; class=&quot;headerlink&quot; title=&quot;启动代理&quot;&gt;&lt;/a&gt;启动代理&lt;/h2&gt;&lt;p&gt;为了简单起见，我们将暂时在开发者模式中启动Consul代理。这个模式可以非常容易快速地启动一个单节点的Consul环境。当然它并不是用于生产环境下并且它也不会持久任何状态。&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ consul agent -dev&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;==&amp;gt; Starting Consul agent...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;==&amp;gt; Starting Consul agent RPC...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;==&amp;gt; Consul agent running!&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         Node name: &lt;span class=&quot;string&quot;&gt;&#39;Armons-MacBook-Air&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Datacenter: &lt;span class=&quot;string&quot;&gt;&#39;dc1&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            Server: &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt; (bootstrap: &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       Client Addr: 127.0.0.1 (HTTP: 8500, HTTPS: -1, DNS: 8600, RPC: 8400)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      Cluster Addr: 172.20.20.11 (LAN: 8301, WAN: 8302)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Gossip encrypt: &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;, RPC-TLS: &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;, TLS-Incoming: &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             Atlas: &amp;lt;disabled&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;==&amp;gt; Log data will now stream &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; as it occurs:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[INFO] raft: Node at 172.20.20.11:8300 [Follower] entering Follower state&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[INFO] serf: EventMemberJoin: Armons-MacBook-Air 172.20.20.11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[INFO] consul: adding LAN server Armons-MacBook-Air (Addr: 172.20.20.11:8300) (DC: dc1)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[INFO] serf: EventMemberJoin: Armons-MacBook-Air.dc1 172.20.20.11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[INFO] consul: adding WAN server Armons-MacBook-Air.dc1 (Addr: 172.20.20.11:8300) (DC: dc1)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[ERR] agent: failed to sync remote state: No cluster leader&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[WARN] raft: Heartbeat timeout reached, starting election&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[INFO] raft: Node at 172.20.20.11:8300 [Candidate] entering Candidate state&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[DEBUG] raft: Votes needed: 1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[DEBUG] raft: Vote granted. Tally: 1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[INFO] raft: Election won. Tally: 1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[INFO] raft: Node at 172.20.20.11:8300 [Leader] entering Leader state&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[INFO] raft: Disabling EnableSingleNode (bootstrap)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[INFO] consul: cluster leadership acquired&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[DEBUG] raft: Node 172.20.20.11:8300 updated peer &lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt; (2): [172.20.20.11:8300]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[DEBUG] consul: reset tombstone GC to index 2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[INFO] consul: New leader elected: Armons-MacBook-Air&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[INFO] consul: member &lt;span class=&quot;string&quot;&gt;&#39;Armons-MacBook-Air&#39;&lt;/span&gt; joined, marking health alive&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[INFO] agent: Synced service &lt;span class=&quot;string&quot;&gt;&#39;consul&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;你可以看到，Consul代理已经启动并且输出了一些日志信息。从日志信息中，你可以看到我们代理运行在服务器模式并且声明集群的leadship。另外，本地的成员已经被标记为一个健康的集群成员。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;OS X用户注意：Consul使用你的机器名作为默认的节点名称。如果你的机器名包涵了点，那么DNS查询该节点会不能工作，为了避免这个问题，使用&lt;em&gt;-node&lt;/em&gt;显式设置你的节点名称。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;集群成员&quot;&gt;&lt;a href=&quot;#集群成员&quot; class=&quot;headerlink&quot; title=&quot;集群成员&quot;&gt;&lt;/a&gt;集群成员&lt;/h2&gt;&lt;p&gt;如果你在另一个终端中运行 &lt;em&gt;consul members&lt;/em&gt; ,你能看到Consul集群所有的节点。我们在下一部分介绍如何加入集群，但是现在你只能看到一个成员（你自己的机器）：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ consul members&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Node                Address            Status  Type    Build     Protocol  DC&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Armons-MacBook-Air  172.20.20.11:8301  alive   server  0.6.1dev  2         dc1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;该命令输出显示你自己的节点，运行的地址，它的健康状态，它在集群中的角色，以及一些版本信息。另外元数据可以通过 &lt;em&gt;-detailed&lt;/em&gt; 选项来查看。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;members&lt;/em&gt; 命令选项的输出是基于 &lt;a href=&quot;https://www.consul.io/docs/internals/gossip.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;gossip协议&lt;/a&gt; 的并且其内容是最终一致。也就是说，在任何时候，你在本地代理看到的内容也许与当前服务器中的状态并不是绝对一致的。如果需要强一致性的状态信息，使用&lt;a href=&quot;https://www.consul.io/docs/agent/http.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;HTTP API&lt;/a&gt;向Consul服务器发送请求：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ curl localhost:8500/v1/catalog/nodes&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[&amp;#123;&lt;span class=&quot;string&quot;&gt;&quot;Node&quot;&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;&quot;Armons-MacBook-Air&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;Address&quot;&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;&quot;172.20.20.11&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;CreateIndex&quot;&lt;/span&gt;:3,&lt;span class=&quot;string&quot;&gt;&quot;ModifyIndex&quot;&lt;/span&gt;:4&amp;#125;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;另外对于HTTP API，&lt;a href=&quot;https://www.consul.io/docs/agent/dns.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;DNS接口&lt;/a&gt;也常被用来查询节点信息。注意你必须确信你的DNS能够找到Consul代理的DNS服务器，Consul代理的DNS服务器默认运行在8600端口。有关DNS实体（类似于”Armons-MacBook-Air.node.consul”）将在后面有更详细的介绍。&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ dig @127.0.0.1 -p 8600 Armons-MacBook-Air.node.consul&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;;; QUESTION SECTION:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;;Armons-MacBook-Air.node.consul.    IN  A&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;;; ANSWER SECTION:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Armons-MacBook-Air.node.consul. 0 IN    A   172.20.20.11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;停止代理&quot;&gt;&lt;a href=&quot;#停止代理&quot; class=&quot;headerlink&quot; title=&quot;停止代理&quot;&gt;&lt;/a&gt;停止代理&lt;/h2&gt;&lt;p&gt;你能够使用 &lt;em&gt;Ctrl-C&lt;/em&gt; （中断信号）来优雅地停止代理。停止代理后，你可以看到它脱离集群并且关闭的信息。&lt;/p&gt;
&lt;p&gt;为了优雅地离开集群，Consul会通知其他的集群成员自己已经脱离了。如果你强制杀死代理的进程，那么其他的集群成员需要侦测节点是否失效。当一个成员离开，它的服务以及（checks）将从目录中移除。当一个成员失效，它的健康会简单地标记为critical，但它并不会被从目录中移除。Consul将自动尝试重新连接到失效的节点，并允许它在某些网络状况下恢复。&lt;/p&gt;
&lt;p&gt;另外，如果一个代理以服务器模式启动，优雅地离开是非常重要的，因为这可以避免潜在的可用性问题，有关&lt;a href=&quot;https://www.consul.io/docs/internals/consensus.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;一致性协议&lt;/a&gt;，查看&lt;a href=&quot;https://www.consul.io/docs/guides/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;指南&lt;/a&gt;来获取更详细的关于如何安全的增加和移除服务器的信息。&lt;/p&gt;
&lt;h2 id=&quot;下一步&quot;&gt;&lt;a href=&quot;#下一步&quot; class=&quot;headerlink&quot; title=&quot;下一步&quot;&gt;&lt;/a&gt;下一步&lt;/h2&gt;&lt;p&gt;一个简单的Consul集群已经启动了，让我们获取一些&lt;a href=&quot;&quot;&gt;服务&lt;/a&gt;吧！&lt;/p&gt;
&lt;p&gt;翻译自&lt;a href=&quot;https://www.consul.io/intro/getting-started/agent.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这里&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;在Consul安装完成后，必须先运行代理。该代理可以以服务器或者客户端模式运行。每个数据中心必须博阿含至少一个服务器，不过一个集群推荐3或5个服务器。一个单服务器的部署在失败的情况下会发生数据丢失因此不推荐使用。&lt;/p&gt;
&lt;p&gt;所有其他的代理运行在客户端模式。一个客户端是一个非常轻量级的进程，它注册服务，运行健康检查，以及转发查询到服务器。代理必须运行在集群中的每个节点上。&lt;/p&gt;
&lt;p&gt;更多的关于启动一个数据中心的细节，请查看&lt;a href=&quot;https://www.consul.io/docs/guides/bootstrapping.html&quot;&gt;这篇指导&lt;/a&gt;。&lt;/p&gt;
    
    </summary>
    
      <category term="Development" scheme="http://yoursite.com/categories/Development/"/>
    
    
      <category term="Consul" scheme="http://yoursite.com/tags/Consul/"/>
    
      <category term="MicroService" scheme="http://yoursite.com/tags/MicroService/"/>
    
  </entry>
  
  <entry>
    <title>安装Consul</title>
    <link href="http://yoursite.com/2016/04/24/Consul-Getting-Started-01-Install-Consul/"/>
    <id>http://yoursite.com/2016/04/24/Consul-Getting-Started-01-Install-Consul/</id>
    <published>2016-04-24T07:18:50.000Z</published>
    <updated>2016-04-26T11:32:33.000Z</updated>
    
    <content type="html">&lt;p&gt;Consul必须首先安装在每个节点上当该节点需要称为Consul集群中的成员。为了使得安装更容易，Consul为所有支持的平台提供了二进制安装包。本页面不描述如何从源码来编译Consul。&lt;/p&gt;
&lt;h2 id=&quot;安装Consul&quot;&gt;&lt;a href=&quot;#安装Consul&quot; class=&quot;headerlink&quot; title=&quot;安装Consul&quot;&gt;&lt;/a&gt;安装Consul&lt;/h2&gt;&lt;p&gt;为了安装Consul，需要在&lt;a href=&quot;https://www.consul.io/downloads.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;下载页面&lt;/a&gt;中找到和你系统匹配的包。Consul被打包成zip格式的压缩包。&lt;/p&gt;
&lt;p&gt;解压Consul zip包，复制&lt;em&gt;consul&lt;/em&gt;二进制文件到系统&lt;em&gt;PATH&lt;/em&gt;中包含的路径下，以确保它可以被执行。在Unix系统中，&lt;em&gt;~/bin&lt;/em&gt;和&lt;em&gt;/usr/local/bin&lt;/em&gt;是通常的安装路径，选择哪个依赖于你安装Consul给单个用户使用还是所有用户都可以使用。对于Windows系统，你可以安装到任意目录，不过不要忘记将安装目录加入到&lt;em&gt;%PATH%&lt;/em&gt;中去。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;OS-X&quot;&gt;&lt;a href=&quot;#OS-X&quot; class=&quot;headerlink&quot; title=&quot;OS X&quot;&gt;&lt;/a&gt;OS X&lt;/h2&gt;&lt;p&gt;如果你使用&lt;a href=&quot;http://brew.sh/#install&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;homebrew&lt;/a&gt;作为你的包管理器，你可以通过它来安装Consul：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ brew cask install consul&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;如果没有&lt;a href=&quot;http://caskroom.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;cask plugin&lt;/a&gt;，那你可以通过下面命令安装：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ brew install caskroom/cask/brew-cask&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;验证安装&quot;&gt;&lt;a href=&quot;#验证安装&quot; class=&quot;headerlink&quot; title=&quot;验证安装&quot;&gt;&lt;/a&gt;验证安装&lt;/h2&gt;&lt;p&gt;安装Consul后，通过打开新的终端回话并且输入&lt;em&gt;consul&lt;/em&gt;是否可用来验证安装是否工作。通过执行&lt;em&gt;consul&lt;/em&gt;你应该可以看到下面类似的输出：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ consul&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;usage: consul [--version] [--help] &amp;lt;&lt;span class=&quot;built_in&quot;&gt;command&lt;/span&gt;&amp;gt; [&amp;lt;args&amp;gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Available commands are:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    agent          Runs a Consul agent&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    event          Fire a new event&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;exec&lt;/span&gt;           Executes a &lt;span class=&quot;built_in&quot;&gt;command&lt;/span&gt; on Consul nodes&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    force-leave    Forces a member of the cluster to enter the &lt;span class=&quot;string&quot;&gt;&quot;left&quot;&lt;/span&gt; state&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    info           Provides debugging information &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; operators&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    join           Tell Consul agent to join cluster&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    keygen         Generates a new encryption key&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    leave          Gracefully leaves the Consul cluster and shuts down&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    members        Lists the members of a Consul cluster&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    monitor        Stream logs from a Consul agent&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    reload         Triggers the agent to reload configuration files&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    version        Prints the Consul version&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    watch          Watch &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; changes &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; Consul&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;如果终端报告&lt;em&gt;consul&lt;/em&gt;没有被找到的错误，那可能是你的&lt;em&gt;PATH&lt;/em&gt;没有被正确的设置导致的。请会到前面的步骤去检查你的&lt;em&gt;PATH&lt;/em&gt;环境变量是否包含了安装Consul目录。&lt;/p&gt;
&lt;h2 id=&quot;下一步&quot;&gt;&lt;a href=&quot;#下一步&quot; class=&quot;headerlink&quot; title=&quot;下一步&quot;&gt;&lt;/a&gt;下一步&lt;/h2&gt;&lt;p&gt;Consul已经安装完成，让我们来&lt;a href=&quot;&quot;&gt;启动代理&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;翻译自&lt;a href=&quot;https://www.consul.io/intro/getting-started/install.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这里&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Consul必须首先安装在每个节点上当该节点需要称为Consul集群中的成员。为了使得安装更容易，Consul为所有支持的平台提供了二进制安装包。本页面不描述如何从源码来编译Consul。&lt;/p&gt;
&lt;h2 id=&quot;安装Consul&quot;&gt;&lt;a href=&quot;#安装Consul&quot; class=&quot;headerlink&quot; title=&quot;安装Consul&quot;&gt;&lt;/a&gt;安装Consul&lt;/h2&gt;&lt;p&gt;为了安装Consul，需要在&lt;a href=&quot;https://www.consul.io/downloads.html&quot;&gt;下载页面&lt;/a&gt;中找到和你系统匹配的包。Consul被打包成zip格式的压缩包。&lt;/p&gt;
&lt;p&gt;解压Consul zip包，复制&lt;em&gt;consul&lt;/em&gt;二进制文件到系统&lt;em&gt;PATH&lt;/em&gt;中包含的路径下，以确保它可以被执行。在Unix系统中，&lt;em&gt;~/bin&lt;/em&gt;和&lt;em&gt;/usr/local/bin&lt;/em&gt;是通常的安装路径，选择哪个依赖于你安装Consul给单个用户使用还是所有用户都可以使用。对于Windows系统，你可以安装到任意目录，不过不要忘记将安装目录加入到&lt;em&gt;%PATH%&lt;/em&gt;中去。&lt;/p&gt;
    
    </summary>
    
      <category term="Development" scheme="http://yoursite.com/categories/Development/"/>
    
    
      <category term="Consul" scheme="http://yoursite.com/tags/Consul/"/>
    
      <category term="MicroService" scheme="http://yoursite.com/tags/MicroService/"/>
    
  </entry>
  
  <entry>
    <title>从APT中获取运行时类信息</title>
    <link href="http://yoursite.com/2016/04/14/Get-class-info-from-APT/"/>
    <id>http://yoursite.com/2016/04/14/Get-class-info-from-APT/</id>
    <published>2016-04-14T12:48:58.000Z</published>
    <updated>2016-04-25T12:44:13.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h2&gt;&lt;p&gt;从JDK1.6开始提供了一个新的被称为APT(Annotation Processing Tool)的工具，使用其提供的APT我们可以通过类似数据结构的方式来访问被编译的Java的源代码。&lt;/p&gt;
&lt;p&gt;利用这个新的工具提供的API我们可以在编译Java源代码的同时对现有代码进行增强和生成代码，比之以往通过运行时的反射以及通过Java的动态代理或者运行时字节码修改来增强要来的更简单并且运行时的效率要更高（指启动时间）&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;问题描述&quot;&gt;&lt;/a&gt;问题描述&lt;/h2&gt;&lt;p&gt;在Java程序运行时可以通过反射来获取类的Meta信息，但是在APT中处理的是Java源代码，此时无法直接获取定义在Annotation里面的类型信息，因为没有反射API可以使用。&lt;br&gt;例如我们定义了一个注解：&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;@Target&lt;/span&gt;(ElementType.TYPE)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;@Retention&lt;/span&gt;(RetentionPolicy.SOURCE)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;meta&quot;&gt;@interface&lt;/span&gt; Service &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Class[] value();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;该注解接受一个Class的参数，注意该注解仅可见于源代码编译过程。&lt;/p&gt;
&lt;p&gt;如果想在APT中获取Service.value，下面代码是不可行的：&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Service service = ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Class[] cls = service.value();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;运行这段代码会在编译时抛出异常，因为在编译时类型信息无法直接获取，只有Native数据和String可以直接获取。&lt;/p&gt;
&lt;!-- more --&gt;
&lt;h2 id=&quot;解决方案&quot;&gt;&lt;a href=&quot;#解决方案&quot; class=&quot;headerlink&quot; title=&quot;解决方案&quot;&gt;&lt;/a&gt;解决方案&lt;/h2&gt;&lt;p&gt;如何解决该问题呢？我们需要使用APT提供的*Mirror API获取Class的相关信息。&lt;/p&gt;
&lt;h3 id=&quot;获取AnnotationMirror对象&quot;&gt;&lt;a href=&quot;#获取AnnotationMirror对象&quot; class=&quot;headerlink&quot; title=&quot;获取AnnotationMirror对象&quot;&gt;&lt;/a&gt;获取AnnotationMirror对象&lt;/h3&gt;&lt;p&gt;首先获取AnnotationMirror对象：&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;AnnotationMirror svcAnnoMirror =&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  MoreElements.getAnnotationMirror(classElement, Service.class).get();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;MoreElements是Google Auto库里面的一个工具类，getAnnotationMirror方法比较简单，它返回Service Annotation对应的AnnotationMirror对象。&lt;/p&gt;
&lt;p&gt;上面的classElement是一个javax.lang.model.element.Element实例，在这里它代表了申明了Service这个Annotation的类的元素。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;在APT里面，Java源代码会被解释称类似XML的结构，比如类，字段，方法，方法的参数等都会被解释称一个元素，每个元素都是Element的实例&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;获取Annotation定义的元素列表&quot;&gt;&lt;a href=&quot;#获取Annotation定义的元素列表&quot; class=&quot;headerlink&quot; title=&quot;获取Annotation定义的元素列表&quot;&gt;&lt;/a&gt;获取Annotation定义的元素列表&lt;/h3&gt;&lt;p&gt;然后获取该Annotation里面定义的所有元素的列表:&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Set&amp;lt;Element&amp;gt; elementSet = svcAnnoMirror.getElementValues().entrySet();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;过滤出key是value的那个元素&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (entry.getKey().getSimpleName().toString().equals(&lt;span class=&quot;string&quot;&gt;&quot;value&quot;&lt;/span&gt;)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  AnnotationValues annoValue = entry.getValue();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;获取TypeElement&quot;&gt;&lt;a href=&quot;#获取TypeElement&quot; class=&quot;headerlink&quot; title=&quot;获取TypeElement&quot;&gt;&lt;/a&gt;获取TypeElement&lt;/h3&gt;&lt;p&gt;有了AnnotationValue，我们就可以取得内部的值：&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;List&amp;lt;AnnotationValue&amp;gt; values = (List&amp;lt;AnnotationValue&amp;gt;) annoValue.getValue();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;因为我们定义了Service.value是一个Class数组，所以这里我们需要把返回值强制转换成List。&lt;/p&gt;
&lt;p&gt;为了获取Service.value里面定义的Class信息，我们需要使用TypeMirror API&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;DeclaredType declaredType = (DeclaredType) value.getValue();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;TypeElement typeElement = (TypeElement) declaredType.asElement();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;有了TypeElement，我们就可以访问该类型相关的信息了，比如获取其完整类名：&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;typeElement.getQualifiedName().toString();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;当然获取它的实现的接口或者定义在它内部的方法或者字段都是可以的。&lt;/p&gt;
&lt;h3 id=&quot;完整代码&quot;&gt;&lt;a href=&quot;#完整代码&quot; class=&quot;headerlink&quot; title=&quot;完整代码&quot;&gt;&lt;/a&gt;完整代码&lt;/h3&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;AnnotationMirror svcAnnoMirror =&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    MoreElements.getAnnotationMirror(classElement, Service.class).get();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;List&amp;lt;String&amp;gt; types = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ArrayList&amp;lt;&amp;gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Observable.from(svcAnnoMirror.getElementValues().entrySet())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      .filter(entry -&amp;gt; &lt;span class=&quot;string&quot;&gt;&quot;value&quot;&lt;/span&gt;.equals(entry.getKey().getSimpleName().toString()))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      .map(Map.Entry::getValue)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      .flatMap(annoValue -&amp;gt; Observable.from((List&amp;lt;AnnotationValue&amp;gt;) annoValue.getValue()))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      .map(annoValue -&amp;gt; (DeclaredType) annoValue.getValue())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      .map(declaredType -&amp;gt; (TypeElement) declaredType.asElement())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      .map(typeElem -&amp;gt; typeElem.getQualifiedName().toString())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      .subscribe(types::add, logger::error);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;上面代码使用rxJava以及Lambda表达式来简化代码。&lt;/p&gt;
&lt;p&gt;参见我的项目源码：&lt;a href=&quot;https://github.com/minjing/uapi/blob/master/uapi.kernel.annotation/src/main/java/uapi/annotation/AnnotationsHandler.java&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这里&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h2&gt;&lt;p&gt;从JDK1.6开始提供了一个新的被称为APT(Annotation Processing Tool)的工具，使用其提供的APT我们可以通过类似数据结构的方式来访问被编译的Java的源代码。&lt;/p&gt;
&lt;p&gt;利用这个新的工具提供的API我们可以在编译Java源代码的同时对现有代码进行增强和生成代码，比之以往通过运行时的反射以及通过Java的动态代理或者运行时字节码修改来增强要来的更简单并且运行时的效率要更高（指启动时间）&lt;/p&gt;
    
    </summary>
    
      <category term="Development" scheme="http://yoursite.com/categories/Development/"/>
    
    
      <category term="Java" scheme="http://yoursite.com/tags/Java/"/>
    
      <category term="APT" scheme="http://yoursite.com/tags/APT/"/>
    
      <category term="Annotation" scheme="http://yoursite.com/tags/Annotation/"/>
    
  </entry>
  
  <entry>
    <title>在GIT中创建一个空分支</title>
    <link href="http://yoursite.com/2016/04/13/Create-empty-branch-in-GIT/"/>
    <id>http://yoursite.com/2016/04/13/Create-empty-branch-in-GIT/</id>
    <published>2016-04-13T07:18:50.000Z</published>
    <updated>2016-04-15T01:32:29.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;问题描述&quot;&gt;&lt;/a&gt;问题描述&lt;/h2&gt;&lt;p&gt;有时候我们需要在GIT里面创建一个空分支，该分支不继承任何提交，没有父节点，完全是一个干净的分支，例如我们需要在某个分支里存放项目文档。&lt;br&gt;使用传统的git checkout命令创建的分支是有父节点的，意味着新branch包含了历史提交，所以我们无法直接使用该命令。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;解决方法&quot;&gt;&lt;a href=&quot;#解决方法&quot; class=&quot;headerlink&quot; title=&quot;解决方法&quot;&gt;&lt;/a&gt;解决方法&lt;/h2&gt;&lt;h3 id=&quot;创建分支&quot;&gt;&lt;a href=&quot;#创建分支&quot; class=&quot;headerlink&quot; title=&quot;创建分支&quot;&gt;&lt;/a&gt;创建分支&lt;/h3&gt;&lt;p&gt;使用 git checkout的–orphan参数:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git checkout --orphan doc&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;该命令会创建一个名为doc的分支，并且该分支下有前一个分支下的所有文件。&lt;br&gt;查看–orphan的帮助：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Create a new orphan branch, named &lt;new_branch&gt;, started from &lt;start point=&quot;&quot;&gt; and switch to it. The first commit made on the new branch will have no parents and it will be the root of a new history totally disconnected from all the other branchs and commits.&lt;/start&gt;&lt;/new_branch&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这里的start point指的是你执行git checkout命令时的那个分支，当然新的分支不会指向任何以前的提交，就是它没有历史，如果你提交当前内容，那么这次提交就是这个分支的首次提交。&lt;/p&gt;
&lt;h3 id=&quot;删除所有内容&quot;&gt;&lt;a href=&quot;#删除所有内容&quot; class=&quot;headerlink&quot; title=&quot;删除所有内容&quot;&gt;&lt;/a&gt;删除所有内容&lt;/h3&gt;&lt;p&gt;我们不想提交任何内容，所以我们需要把当前内容全部删除，用git命令：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git rm -rf .&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;提交分支&quot;&gt;&lt;a href=&quot;#提交分支&quot; class=&quot;headerlink&quot; title=&quot;提交分支&quot;&gt;&lt;/a&gt;提交分支&lt;/h3&gt;&lt;p&gt;使用commit命令来提交分支&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git commit -am &lt;span class=&quot;string&quot;&gt;&quot;new branch for documentation&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;如果没有任何文件提交的话，分支是看不到的，可以创建一个新文件后再次提交则新创建的branch就会显示出来。&lt;br&gt;使用branch来查看分支是否创建成功&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git branch &lt;span class=&quot;_&quot;&gt;-a&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;问题描述&quot;&gt;&lt;/a&gt;问题描述&lt;/h2&gt;&lt;p&gt;有时候我们需要在GIT里面创建一个空分支，该分支不继承任何提交，没有父节点，完全是一个干净的分支，例如我们需要在某个分支里存放项目文档。&lt;br&gt;使用传统的git checkout命令创建的分支是有父节点的，意味着新branch包含了历史提交，所以我们无法直接使用该命令。&lt;/p&gt;
    
    </summary>
    
      <category term="Development" scheme="http://yoursite.com/categories/Development/"/>
    
    
      <category term="GIT" scheme="http://yoursite.com/tags/GIT/"/>
    
  </entry>
  
</feed>
